package com.lfc.mysql.greenDao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.lfc.mysql.DataBeans.UserD;
import com.lfc.mysql.DataBeans.Student;
import com.lfc.mysql.DataBeans.CustomerD;
import com.lfc.mysql.DataBeans.OrdersD;
import com.lfc.mysql.DataBeans.CardInfoD;
import com.lfc.mysql.DataBeans.PersonInfoD;

import com.lfc.mysql.greenDao.UserDDao;
import com.lfc.mysql.greenDao.StudentDao;
import com.lfc.mysql.greenDao.CustomerDDao;
import com.lfc.mysql.greenDao.OrdersDDao;
import com.lfc.mysql.greenDao.CardInfoDDao;
import com.lfc.mysql.greenDao.PersonInfoDDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDDaoConfig;
    private final DaoConfig studentDaoConfig;
    private final DaoConfig customerDDaoConfig;
    private final DaoConfig ordersDDaoConfig;
    private final DaoConfig cardInfoDDaoConfig;
    private final DaoConfig personInfoDDaoConfig;

    private final UserDDao userDDao;
    private final StudentDao studentDao;
    private final CustomerDDao customerDDao;
    private final OrdersDDao ordersDDao;
    private final CardInfoDDao cardInfoDDao;
    private final PersonInfoDDao personInfoDDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDDaoConfig = daoConfigMap.get(UserDDao.class).clone();
        userDDaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        customerDDaoConfig = daoConfigMap.get(CustomerDDao.class).clone();
        customerDDaoConfig.initIdentityScope(type);

        ordersDDaoConfig = daoConfigMap.get(OrdersDDao.class).clone();
        ordersDDaoConfig.initIdentityScope(type);

        cardInfoDDaoConfig = daoConfigMap.get(CardInfoDDao.class).clone();
        cardInfoDDaoConfig.initIdentityScope(type);

        personInfoDDaoConfig = daoConfigMap.get(PersonInfoDDao.class).clone();
        personInfoDDaoConfig.initIdentityScope(type);

        userDDao = new UserDDao(userDDaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);
        customerDDao = new CustomerDDao(customerDDaoConfig, this);
        ordersDDao = new OrdersDDao(ordersDDaoConfig, this);
        cardInfoDDao = new CardInfoDDao(cardInfoDDaoConfig, this);
        personInfoDDao = new PersonInfoDDao(personInfoDDaoConfig, this);

        registerDao(UserD.class, userDDao);
        registerDao(Student.class, studentDao);
        registerDao(CustomerD.class, customerDDao);
        registerDao(OrdersD.class, ordersDDao);
        registerDao(CardInfoD.class, cardInfoDDao);
        registerDao(PersonInfoD.class, personInfoDDao);
    }
    
    public void clear() {
        userDDaoConfig.clearIdentityScope();
        studentDaoConfig.clearIdentityScope();
        customerDDaoConfig.clearIdentityScope();
        ordersDDaoConfig.clearIdentityScope();
        cardInfoDDaoConfig.clearIdentityScope();
        personInfoDDaoConfig.clearIdentityScope();
    }

    public UserDDao getUserDDao() {
        return userDDao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public CustomerDDao getCustomerDDao() {
        return customerDDao;
    }

    public OrdersDDao getOrdersDDao() {
        return ordersDDao;
    }

    public CardInfoDDao getCardInfoDDao() {
        return cardInfoDDao;
    }

    public PersonInfoDDao getPersonInfoDDao() {
        return personInfoDDao;
    }

}
